---
- name: Install nginx
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - nginx
      - libnginx-mod-rtmp 
    state: present

- name: "create www directory for your virtualhost"
  ansible.builtin.file:
    path: /var/www/{{ domain }}
    state: directory
    mode: '0775'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: delete default nginx site configuration
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx

- name: Set up nginx config
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Set up sites available 
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /etc/nginx/sites-available/{{ item }}
  with_items: "{{ servers }}"
  notify: restart nginx

- name:  Set up sites enabled
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    state: link
  with_items: "{{ servers }}"
  notify: restart nginx

# - name: rtmp configuration
#   ansible.builtin.template:
#     src: "rtmp.j2"
#     dest: "/etc/nginx/conf.d/rtmp"
#   notify: restart nginx

- name: change index.html
  ansible.builtin.template:
    src: index.html.j2
    dest: /var/www/{{domain}}/index.html
    mode: '0775'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Check nginx syntax
  command: nginx -t

# - name: Install ffmpeg
#   apt:
#     pkg: ffmpeg
#     state: present 
#     update_cache: true

# - name: Copy the video to be streamed
#   copy:
#     src: files/stock_screening.mp4
#     dest: /media/stock_screening.mp4
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"

# - name: Start video streaming
#   command: "ffmpeg -re -i /media/stock_screening.mp4 -c:v libx264 -c:a aac -f flv rtmp://{{ nginx_host }}/hls/my-video"